package InterfaceCreator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActionEnum = createDescriptorForActionEnum();
  /*package*/ final ConceptDescriptor myConceptActionReference = createDescriptorForActionReference();
  /*package*/ final ConceptDescriptor myConceptCalculator = createDescriptorForCalculator();
  /*package*/ final ConceptDescriptor myConceptInput = createDescriptorForInput();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptActionEnum, myConceptActionReference, myConceptCalculator, myConceptInput);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.ActionEnum:
        return myConceptActionEnum;
      case LanguageConceptSwitch.ActionReference:
        return myConceptActionReference;
      case LanguageConceptSwitch.Calculator:
        return myConceptCalculator;
      case LanguageConceptSwitch.Input:
        return myConceptInput;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("InterfaceCreator", "Action", 0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x4876abac40debcL);
    b.class_(false, false, false);
    b.origin("r:cb9c537d-50e2-437d-a5db-f480effc40d7(InterfaceCreator.structure)/20396678024584892");
    b.version(2);
    b.aggregate("action", 0x393d35efb0d2d28fL).target(0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x393d35efb0d2d20aL).optional(false).ordered(true).multiple(false).origin("4124512137321304719").done();
    b.alias("action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionEnum() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("InterfaceCreator", "ActionEnum", 0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x393d35efb0d226f9L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:cb9c537d-50e2-437d-a5db-f480effc40d7(InterfaceCreator.structure)/4124512137321260793");
    b.version(2);
    b.alias("action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("InterfaceCreator", "ActionReference", 0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x393d35efb0d2d20aL);
    b.class_(false, false, false);
    b.origin("r:cb9c537d-50e2-437d-a5db-f480effc40d7(InterfaceCreator.structure)/4124512137321304586");
    b.version(2);
    b.associate("targer", 0x393d35efb0d2d22bL).target(0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x393d35efb0d226f9L).optional(false).origin("4124512137321304619").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCalculator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("InterfaceCreator", "Calculator", 0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x4876abac3d2f70L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:cb9c537d-50e2-437d-a5db-f480effc40d7(InterfaceCreator.structure)/20396678024343408");
    b.version(2);
    b.aggregate("actions", 0x2f9a57c5d67eaf18L).target(0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x4876abac40debcL).optional(false).ordered(true).multiple(true).origin("3430150573414854424").done();
    b.aggregate("inputs", 0x2f9a57c5d67eaf1aL).target(0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x4876abac40debbL).optional(false).ordered(true).multiple(true).origin("3430150573414854426").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInput() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("InterfaceCreator", "Input", 0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x4876abac40debbL);
    b.class_(false, false, false);
    b.origin("r:cb9c537d-50e2-437d-a5db-f480effc40d7(InterfaceCreator.structure)/20396678024584891");
    b.version(2);
    b.property("value", 0x4876abac40ded5L).type(PrimitiveTypeId.STRING).origin("20396678024584917").done();
    b.alias("input");
    return b.create();
  }
}
