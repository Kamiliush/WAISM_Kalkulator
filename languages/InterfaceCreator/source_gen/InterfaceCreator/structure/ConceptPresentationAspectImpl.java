package InterfaceCreator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Action;
  private ConceptPresentation props_ActionEnum;
  private ConceptPresentation props_ActionReference;
  private ConceptPresentation props_Calculator;
  private ConceptPresentation props_Input;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Action:
        if (props_Action == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("action");
          props_Action = cpb.create();
        }
        return props_Action;
      case LanguageConceptSwitch.ActionEnum:
        if (props_ActionEnum == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_ActionEnum = cpb.create();
        }
        return props_ActionEnum;
      case LanguageConceptSwitch.ActionReference:
        if (props_ActionReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xf4edb82064c444beL, 0x93d796440bb7833cL, 0x393d35efb0d2d20aL, 0x393d35efb0d2d22bL, "targer", "", "");
          props_ActionReference = cpb.create();
        }
        return props_ActionReference;
      case LanguageConceptSwitch.Calculator:
        if (props_Calculator == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Calculator = cpb.create();
        }
        return props_Calculator;
      case LanguageConceptSwitch.Input:
        if (props_Input == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("input");
          props_Input = cpb.create();
        }
        return props_Input;
    }
    return null;
  }
}
